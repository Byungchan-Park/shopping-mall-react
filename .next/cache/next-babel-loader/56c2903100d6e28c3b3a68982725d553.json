{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\jspar\\\\Desktop\\\\shopping-list-functionality\\\\pages\\\\list.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport Header from \"../components/layout/header\";\nimport Footer from \"../components/layout/footer\";\nimport Input from \"../components/form/input\";\nimport Button from \"../components/form/button\";\nimport Card from \"../components/card/product\";\nimport Confirm from \"../components/modal/confirm\";\n\nvar ProductListPage = function ProductListPage() {\n  _s();\n\n  var _useState = useState([{\n    idx: 1,\n    name: \"새우깡\",\n    price: \"1500\"\n  }, {\n    idx: 2,\n    name: \"고구마깡\",\n    price: \"2000\"\n  }, {\n    idx: 3,\n    name: \"감자깡\",\n    price: \"1800\"\n  }, {\n    idx: 4,\n    name: \"다이제스티\",\n    price: \"10000\"\n  }, {\n    idx: 5,\n    name: \"초코파이\",\n    price: \"5000\"\n  }]),\n      productList = _useState[0],\n      setProductList = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      searchVal = _useState2[0],\n      setSearchVal = _useState2[1];\n\n  var _useState3 = useState({\n    name: \"\",\n    price: \"\"\n  }),\n      createProductInfo = _useState3[0],\n      setCreateProductInfo = _useState3[1];\n\n  var _useState4 = useState(),\n      selectedCard = _useState4[0],\n      setSelectedCard = _useState4[1];\n\n  var _useState5 = useState(false),\n      showConfirm = _useState5[0],\n      setShowConfirm = _useState5[1];\n\n  var _useState6 = useState(\"\"),\n      mainText = _useState6[0],\n      setMainText = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      subText = _useState7[0],\n      setSubText = _useState7[1];\n\n  var handleShowConfirm = function handleShowConfirm(main, sub) {\n    setMainText(main);\n    setSubText(sub);\n  };\n\n  var handleCloseConfirm = function handleCloseConfirm() {\n    setShowConfirm(false);\n    document.body.style.overflow = \"auto\";\n  }; // Search input의 value를 저장해둠.\n\n\n  var handleSearchInput = function handleSearchInput(name, value) {\n    setSearchVal(value); // searchVal 하고 productList 안에 있는 item.name을 비교\n    // filter method 활용\n    // 검색한 문자열이 존재하는지 하지 않는지 true로 반환값이 나올 수 있도록(String.prototype.includes() 활용)\n\n    /* setProductList(\r\n      productList.filter((item, index) => item.name.includes(value))\r\n    ); */\n    // 이렇게 구현하면 문제가 있음. render의 body 부분에서 productList에 filter를 적용.\n    // array.filter((item, index) => item.indexOf('특정스트링') === index)\n  };\n\n  var nextId = useRef(6);\n\n  var handleChangeInput = function handleChangeInput(name, value) {\n    setCreateProductInfo(_objectSpread(_objectSpread({}, createProductInfo), {}, _defineProperty({}, name, value)));\n  };\n  /* name, price 에 입력 후 등록 기능 */\n\n\n  var onCreate = function onCreate() {\n    var newProduct = {\n      idx: nextId.current,\n      name: createProductInfo.name,\n      price: createProductInfo.price\n    };\n    setProductList(productList.concat(newProduct));\n    nextId.current += 1; // 등록 후 input 창들 초기화\n\n    setCreateProductInfo({\n      name: \"\",\n      price: \"\"\n    });\n  }; // 카드 선택\n\n\n  var handleIsClicked = function handleIsClicked(idx) {\n    alert(\"선택되었습니다.\");\n    setSelectedCard(idx);\n  };\n  /* 카드를 클릭하고 클릭한 카드의 보더가 바뀌고 상품명, 가격 창에 수정할 사항 입력 후 다시 수정 버튼 누르면 수정이 된다. */\n\n\n  var onRevise = function onRevise() {\n    setProductList(productList.map(function (item) {\n      item.idx === selectedCard ? _objectSpread(_objectSpread({}, item), {}, {\n        name: createProductInfo.name,\n        price: createProductInfo.price\n      }) : item;\n    })); // productList를 그대로 가져와서, idx = 5인 item에 대해서 name만 변경한다.\n    // 그게 아닐 경우는 그대로 둔다.\n  };\n  /* 내가 클릭한 카드를 삭제하는 로직을 짜야 한다. */\n\n\n  var onDelete = function onDelete() {\n    setProductList(productList.filter(function (item) {\n      return item.idx !== selectedCard;\n    })); // idx의 값은 number이므로 문자열이 아님.\n\n    setShowConfirm(false);\n  };\n\n  useEffect(function () {\n    if (mainText) {\n      setShowConfirm(true);\n    }\n  }, [mainText, subText]);\n  return __jsx(React.Fragment, null, __jsx(Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: \"list-wrapper\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"con-head\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, __jsx(Input, {\n    label: \"\\uAC80\\uC0C9\",\n    type: \"text\",\n    name: \"search\",\n    changeCB: handleSearchInput,\n    value: searchVal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }), __jsx(Input, {\n    className: \"product-name-input-group\",\n    label: \"\\uC0C1\\uD488\\uBA85\",\n    type: \"text\",\n    name: \"name\",\n    changeCB: handleChangeInput,\n    value: createProductInfo.name,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }), __jsx(Input, {\n    label: \"\\uAC00\\uACA9\",\n    type: \"text\",\n    name: \"price\",\n    changeCB: handleChangeInput,\n    value: createProductInfo.price,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }), __jsx(Button, {\n    btnColor: \"btn-black\",\n    clickCB: onCreate,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, \"\\uB4F1 \\uB85D\"), __jsx(Button, {\n    btnColor: \"btn-black\",\n    clickCB: onRevise,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, \"\\uC218 \\uC815\"), __jsx(Button, {\n    btnColor: \"btn-black\",\n    clickCB: function clickCB() {\n      return handleShowConfirm(\"삭제하시겠습니까?\", \"영구 삭제됩니다.\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, \"\\uC0AD \\uC81C\")), __jsx(\"div\", {\n    className: \"con-body\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"list\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, productList.filter(function (item) {\n    return item.name.indexOf(searchVal) !== -1;\n  }).map(function (item, index) {\n    return __jsx(Card, {\n      key: index,\n      id: item.idx,\n      name: item.name,\n      price: item.price,\n      clickCB: function clickCB() {\n        return handleIsClicked(item.idx);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 19\n      }\n    });\n  }))))), __jsx(Footer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }\n  }), __jsx(Confirm, {\n    show: showConfirm,\n    mainText: mainText,\n    subText: subText,\n    onCloseCB: handleCloseConfirm,\n    onConfirmCB: function onConfirmCB() {\n      return onDelete();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(ProductListPage, \"5pwQhLHE8J+RiPD+H4N1pEDwhPc=\");\n\n_c = ProductListPage;\nexport default ProductListPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductListPage\");","map":{"version":3,"sources":["C:/Users/jspar/Desktop/shopping-list-functionality/pages/list.js"],"names":["React","useState","useRef","useEffect","Header","Footer","Input","Button","Card","Confirm","ProductListPage","idx","name","price","productList","setProductList","searchVal","setSearchVal","createProductInfo","setCreateProductInfo","selectedCard","setSelectedCard","showConfirm","setShowConfirm","mainText","setMainText","subText","setSubText","handleShowConfirm","main","sub","handleCloseConfirm","document","body","style","overflow","handleSearchInput","value","nextId","handleChangeInput","onCreate","newProduct","current","concat","handleIsClicked","alert","onRevise","map","item","onDelete","filter","indexOf","index"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport Header from \"../components/layout/header\";\r\nimport Footer from \"../components/layout/footer\";\r\nimport Input from \"../components/form/input\";\r\nimport Button from \"../components/form/button\";\r\nimport Card from \"../components/card/product\";\r\nimport Confirm from \"../components/modal/confirm\";\r\n\r\nconst ProductListPage = () => {\r\n  const [productList, setProductList] = useState([\r\n    { idx: 1, name: \"새우깡\", price: \"1500\" },\r\n    { idx: 2, name: \"고구마깡\", price: \"2000\" },\r\n    { idx: 3, name: \"감자깡\", price: \"1800\" },\r\n    { idx: 4, name: \"다이제스티\", price: \"10000\" },\r\n    { idx: 5, name: \"초코파이\", price: \"5000\" },\r\n  ]);\r\n  const [searchVal, setSearchVal] = useState(\"\");\r\n  const [createProductInfo, setCreateProductInfo] = useState({\r\n    name: \"\",\r\n    price: \"\",\r\n  });\r\n  const [selectedCard, setSelectedCard] = useState();\r\n  const [showConfirm, setShowConfirm] = useState(false);\r\n  const [mainText, setMainText] = useState(\"\");\r\n  const [subText, setSubText] = useState(\"\");\r\n\r\n  const handleShowConfirm = (main, sub) => {\r\n    setMainText(main);\r\n    setSubText(sub);\r\n  };\r\n\r\n  const handleCloseConfirm = () => {\r\n    setShowConfirm(false);\r\n    document.body.style.overflow = \"auto\";\r\n  };\r\n\r\n  // Search input의 value를 저장해둠.\r\n  const handleSearchInput = (name, value) => {\r\n    setSearchVal(value);\r\n    // searchVal 하고 productList 안에 있는 item.name을 비교\r\n    // filter method 활용\r\n    // 검색한 문자열이 존재하는지 하지 않는지 true로 반환값이 나올 수 있도록(String.prototype.includes() 활용)\r\n    /* setProductList(\r\n      productList.filter((item, index) => item.name.includes(value))\r\n    ); */\r\n    // 이렇게 구현하면 문제가 있음. render의 body 부분에서 productList에 filter를 적용.\r\n\r\n    // array.filter((item, index) => item.indexOf('특정스트링') === index)\r\n  };\r\n\r\n  const nextId = useRef(6);\r\n\r\n  const handleChangeInput = (name, value) => {\r\n    setCreateProductInfo({ ...createProductInfo, [name]: value });\r\n  };\r\n\r\n  /* name, price 에 입력 후 등록 기능 */\r\n  const onCreate = () => {\r\n    const newProduct = {\r\n      idx: nextId.current,\r\n      name: createProductInfo.name,\r\n      price: createProductInfo.price,\r\n    };\r\n    setProductList(productList.concat(newProduct));\r\n    nextId.current += 1;\r\n    // 등록 후 input 창들 초기화\r\n    setCreateProductInfo({ name: \"\", price: \"\" });\r\n  };\r\n\r\n  // 카드 선택\r\n  const handleIsClicked = (idx) => {\r\n    alert(\"선택되었습니다.\");\r\n    setSelectedCard(idx);\r\n  };\r\n\r\n  /* 카드를 클릭하고 클릭한 카드의 보더가 바뀌고 상품명, 가격 창에 수정할 사항 입력 후 다시 수정 버튼 누르면 수정이 된다. */\r\n  const onRevise = () => {\r\n    setProductList(\r\n      productList.map((item) => {\r\n        item.idx === selectedCard\r\n          ? {\r\n              ...item,\r\n              name: createProductInfo.name,\r\n              price: createProductInfo.price,\r\n            }\r\n          : item;\r\n      })\r\n    );\r\n    // productList를 그대로 가져와서, idx = 5인 item에 대해서 name만 변경한다.\r\n    // 그게 아닐 경우는 그대로 둔다.\r\n  };\r\n\r\n  /* 내가 클릭한 카드를 삭제하는 로직을 짜야 한다. */\r\n  const onDelete = () => {\r\n    setProductList(productList.filter((item) => item.idx !== selectedCard));\r\n    // idx의 값은 number이므로 문자열이 아님.\r\n    setShowConfirm(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (mainText) {\r\n      setShowConfirm(true);\r\n    }\r\n  }, [mainText, subText]);\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"list-wrapper\">\r\n        <div className=\"container\">\r\n          <div className=\"con-head\">\r\n            <Input\r\n              label=\"검색\"\r\n              type=\"text\"\r\n              name=\"search\"\r\n              changeCB={handleSearchInput}\r\n              value={searchVal}\r\n            />\r\n            <Input\r\n              className=\"product-name-input-group\"\r\n              label=\"상품명\"\r\n              type=\"text\"\r\n              name=\"name\"\r\n              changeCB={handleChangeInput}\r\n              value={createProductInfo.name}\r\n            />\r\n            <Input\r\n              label=\"가격\"\r\n              type=\"text\"\r\n              name=\"price\"\r\n              changeCB={handleChangeInput}\r\n              value={createProductInfo.price}\r\n            />\r\n            <Button btnColor=\"btn-black\" clickCB={onCreate}>\r\n              등 록\r\n            </Button>\r\n            <Button btnColor=\"btn-black\" clickCB={onRevise}>\r\n              수 정\r\n            </Button>\r\n            <Button\r\n              btnColor=\"btn-black\"\r\n              clickCB={() =>\r\n                handleShowConfirm(\"삭제하시겠습니까?\", \"영구 삭제됩니다.\")\r\n              }\r\n            >\r\n              삭 제\r\n            </Button>\r\n          </div>\r\n          <div className=\"con-body\">\r\n            <div className=\"list\">\r\n              {productList\r\n                .filter((item) => item.name.indexOf(searchVal) !== -1)\r\n                .map((item, index) => (\r\n                  <Card\r\n                    key={index}\r\n                    id={item.idx}\r\n                    name={item.name}\r\n                    price={item.price}\r\n                    clickCB={() => handleIsClicked(item.idx)}\r\n                  />\r\n                ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n      <Confirm\r\n        show={showConfirm}\r\n        mainText={mainText}\r\n        subText={subText}\r\n        onCloseCB={handleCloseConfirm}\r\n        onConfirmCB={() => onDelete()}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductListPage;\r\n"]},"metadata":{},"sourceType":"module"}